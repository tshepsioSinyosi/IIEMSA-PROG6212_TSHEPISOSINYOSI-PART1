@model ContractClaimSystem.Models.ClaimSubmissionViewModel

@{
    ViewData["Title"] = "Submit Claim";
}

<div class="container py-5">
    <h2 class="mb-4 text-primary">Submit New Claim</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
        </div>
    }

    <form asp-action="Submit" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
        <div class="mb-3">
            <label asp-for="HoursWorked" class="form-label">Hours Worked</label>
            <input asp-for="HoursWorked" class="form-control" type="number" step="0.1" min="0" required />
            <span asp-validation-for="HoursWorked" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="HourlyRate" class="form-label">Hourly Rate</label>
            <input asp-for="HourlyRate" class="form-control" type="number" step="0.01" min="0" required />
            <span asp-validation-for="HourlyRate" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Notes" class="form-label">Notes (Optional)</label>
            <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Notes" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Supporting Documents (Optional)</label>
            <input asp-for="SupportingFiles" type="file" multiple class="form-control" />
            <small class="text-muted">Allowed: pdf, png, jpg, jpeg, docx. Max 5MB each.</small>
        </div>

        <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-paper-plane me-2"></i> Submit Claim
        </button>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Optional: Bootstrap client-side validation
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}
